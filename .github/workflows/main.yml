name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # allow manual runs
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    strategy:
      matrix:
        node: [10]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: install pnpm
        run: npm install -g pnpm@5.17.1
      - name: Month and Year (for cache busting)
        id: month-and-year
        shell: bash
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y%m")"
      - uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ matrix.node }}-${{ github.workflow }}-${{ steps.month-and-year.outputs.date }}-${{ hashFiles('./pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node }}-${{ github.workflow }}-${{ steps.month-and-year.outputs.date }}-
      - name: install deps
        run: pnpm install --frozen-lockfile
      - name: build
        run: pnpm run -r build
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    strategy:
      max-parallel: 4
      matrix:
        package: ["rollup-plugin", "transform"]
        command: ["type-check", "lint", "test", "format:check", "depcheck"]
        node: [ 10 ]
        include:
          - package: "rollup-plugin"
            command: test
            node: 12
          - package: "rollup-plugin"
            command: test
            node: 14
          - package: "transform"
            command: test
            node: 12
          - package: "transform"
            command: test
            node: 14
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: install pnpm
        run: npm install -g pnpm@5.17.1
      - name: Month and Year (for cache busting)
        id: month-and-year
        shell: bash
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y%m")"
      - uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-10-${{ github.workflow }}-${{ steps.month-and-year.outputs.date }}-${{ hashFiles('./pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-10-${{ github.workflow }}-${{ steps.month-and-year.outputs.date }}-
      - name: install deps
        run: pnpm install --frozen-lockfile --filter {./packages/${{ matrix.package }}}...
      - name: build deps
        run: pnpm run build --filter {./packages/${{ matrix.package }}}^...
      - name: ${{ matrix.command }}
        run: pnpm run ${{ matrix.command }} --filter {./packages/${{ matrix.package }}}
  release:
    if: github.ref == 'refs/heads/main'
    needs: ["test", "build"]
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: 10
      - name: install pnpm
        run: npm install -g pnpm@5.17.1
      - name: install deps
        run: pnpm install --frozen-lockfile
      - name: build
        run: pnpm run -r build
      - name: write .npmrc
        run: printf "//registry.npmjs.org/:_authToken=%s" "$NPM_TOKEN" > ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      # release order matters for resolving proper versions (semantic-release is likely to have issues with the multiple packages)
      - name: Release transform
        run: |
          cd packages/transform
          pnpx -p semantic-release@17.3 -p semantic-release-monorepo@7.0 -p @semantic-release/exec@5.0 semantic-release --dry-run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Release rollup-plugin
        run: |
          cd packages/rollup-plugin
          pnpx -p semantic-release@17.3 -p semantic-release-monorepo@7.0 -p @semantic-release/exec@5.0 semantic-release --dry-run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
