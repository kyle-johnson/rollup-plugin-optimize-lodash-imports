name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # allow manual runs
  workflow_dispatch:
env:
  PNPM_VERSION: 9.15.4
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    strategy:
      matrix:
        node: [20]
        package: ["rollup-plugin", "transform", "esbuild-plugin"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: pnpm
      - name: install pnpm
        run: npm install -g pnpm@$PNPM_VERSION
      - name: install deps
        run: pnpm --filter {./packages/${{ matrix.package }}}... install --frozen-lockfile
      - name: build
        run: pnpm --filter {./packages/${{ matrix.package }}}... run build
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    strategy:
      max-parallel: 4
      matrix:
        package: ["rollup-plugin", "transform", "esbuild-plugin"]
        command: ["test:ci"]
        node: [ 18, 20, 22 ]
        include:
          - package: "rollup-plugin"
            command: lint
            node: 20
          - package: "transform"
            command: lint
            node: 20          
          - package: "rollup-plugin"
            command: "format:check"
            node: 20
          - package: "transform"
            command: "format:check"
            node: 20
          - package: "rollup-plugin"
            command: "depcheck"
            node: 20
          - package: "transform"
            command: "depcheck"
            node: 20
          - package: "rollup-plugin"
            command: "type-check"
            node: 20
          - package: "transform"
            command: "type-check"
            node: 20
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: pnpm
      - name: install pnpm
        run: npm install -g pnpm@$PNPM_VERSION
      - name: install deps
        run: pnpm --filter {./packages/${{ matrix.package }}}... install --frozen-lockfile
      - name: build deps
        run: pnpm --filter {./packages/${{ matrix.package }}}^... run build
      - name: ${{ matrix.command }}
        run: pnpm --filter {./packages/${{ matrix.package }}} run ${{ matrix.command }}
      - name: coverage
        uses: codecov/codecov-action@v3
        if: matrix.command == 'test:ci' && matrix.node == '16'
        with:
          flags: ${{ matrix.package }}
          files: ./packages/${{ matrix.package }}/coverage/coverage-final.json
  release:
    if: github.ref == 'refs/heads/main' && github.repository == 'kyle-johnson/rollup-plugin-optimize-lodash-imports'
    needs: ["test", "build"]
    name: Release
    runs-on: ubuntu-latest
    permissions:
      # changesets has to create a branch and open a PR
      contents: write
      pull-requests: write
      # provenance
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: install pnpm
        run: npm install -g pnpm@$PNPM_VERSION
      - name: install deps
        run: pnpm install --frozen-lockfile --ignore-scripts
      - name: build all
        run: pnpm run -r build
      - name: write .npmrc
        run: printf "//registry.npmjs.org/:_authToken=%s" "$NPM_TOKEN" > ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Changesets
        id: Changesets
        uses: changesets/action@v1
        with:
          publish: pnpm run release
          version: pnpm run version
          commit: "release: update versions"
          title: "Pending release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_CONFIG_PROVENANCE: "true"
